{"version":3,"sources":["API/constants.js","API/requests.js","API/axios.js","components/Banner.js","components/Nav.js","components/MovieModal/index.js","components/Row.js","components/App.js","serviceWorker.js","index.js"],"names":["baseUrl","requests","fetchDQsPick","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","instance","axios","create","baseURL","Banner","movie","setMovie","useState","useEffect","async","request","get","headers","data","result","Math","floor","random","length","fetchData","_jsxs","className","style","backgroundImage","concat","poster_path","backgroundPosition","backgroundSize","children","_jsx","title","name","original_name","PlayArrowIcon","str","overview","n","substr","truncate","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","alt","src","MovieModal","_ref","movieId","genres","url","rating_avg","rating_count","setModalVisibility","addRating","role","onClick","CancelIcon","replaceAll","toFixed","open","ReactStars","count","onChange","rating","rating_with_id","console","log","size","color2","Row","id","fetchUrl","movies","setMovies","modalVisibility","movieSelected","setMovieSelection","document","getElementById","scrollLeft","innerWidth","ArrowBackIosIcon","map","idx","handleClick","loading","ArrowForwardIosIcon","App","personalizeUrl","setPersonalizeUrl","myRating","setMyRating","push","user_based_param","join","Boolean","location","hostname","match","ReactDOM","render","React","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.88f0e66e.chunk.js","sourcesContent":["export const baseUrl = \"http://api.doribari.com:8080\";\n","// const API_KEY = \"896c8566fc255f7c52f6ea6bd2901188\";\n\nconst requests = {\n    fetchDQsPick: `/all/`,\n    fetchActionMovies: `/genres/action`,\n    fetchComedyMovies: `/genres/comedy`,\n    fetchHorrorMovies: `/genres/horror`,\n    fetchRomanceMovies: `/genres/romance`,\n}\n\nexport default requests;","import axios from \"axios\";\nimport { baseUrl } from \"./constants\";\n\nconst instance = axios.create({\n  baseURL: baseUrl,\n});\n\nexport default instance;\n","import PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"../API/axios\";\nimport requests from \"../API/requests\";\nimport \"./Banner.css\";\n\nconst Banner = () => {\n  const [movie, setMovie] = useState([]);\n\n  const truncate = (str, n) => {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchDQsPick, {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n      });\n      //Give to our movie hook one of all the movies randomly\n      setMovie(\n        request.data.result[\n          Math.floor(Math.random() * request.data.result.length - 1)\n        ]\n      );\n      return request;\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundImage: `url(\n                    \"https://image.tmdb.org/t/p/original/${movie?.poster_path}\"\n                    )`,\n        backgroundPosition: \"top center\",\n        backgroundSize: \"cover\",\n      }}\n    >\n      <div className=\"banner__contents\">\n        {/**Title */}\n        <h1 className=\"banner__title\">\n          {movie?.title || movie?.name || movie?.original_name}\n        </h1>\n        <div className=\"banner__buttons\">\n          <button className=\"banner__button play\">\n            <PlayArrowIcon />\n            Play\n          </button>\n          {/* <button className=\"banner__button info\"><InfoOutlinedIcon fontSize=\"small\"  paddingRight={20} marginRight={100}/><div className=\"space\"></div> More Information</button> */}\n        </div>\n        {/**DIV > 2 BUTTONS */}\n\n        <h1 className=\"banner__description\">\n          {truncate(movie?.overview, 150)}\n        </h1>\n        {/*Description*/}\n      </div>\n      <div className=\"banner--fadeBottom\" />\n    </header>\n  );\n};\n\nexport default Banner;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Nav.css\";\n\nconst Nav = () => {\n  const [show, handleShow] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 50) {\n        handleShow(true);\n      } else {\n        handleShow(false);\n      }\n    });\n    return () => {\n      window.removeEventListener(\"scroll\", () => {});\n    };\n  }, []);\n\n  return (\n    <nav className={`nav ${show && \"nav__black\"}`}>\n      <img\n        alt=\"DQflex logo\"\n        src=\"https://i.ibb.co/svtr2tD/dqflex-logo.png\"\n        className=\"nav__logo\"\n      />\n      <img\n        alt=\"User logged\"\n        src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\n        className=\"nav__avatar\"\n      />\n    </nav>\n  );\n};\n\nexport default Nav;\n","import CancelIcon from \"@material-ui/icons/Cancel\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport React from \"react\";\nimport ReactStars from \"react-stars\";\nimport { baseUrl } from \"../../API/constants\";\nimport Row from \"../Row\";\nimport \"./MovieModal.css\";\n\nconst MovieModal = ({\n  poster_path,\n  movieId,\n  title,\n  genres,\n  url,\n  rating_avg,\n  rating_count,\n  setModalVisibility,\n  addRating,\n}) => {\n  const onRating = (rating) => {\n    const rating_with_id = `${movieId}:${rating}`;\n    console.log(rating_with_id);\n    addRating(rating_with_id);\n    setModalVisibility(false);\n  };\n\n  return (\n    <div className=\"presentation\" role=\"presentation\">\n      <div className=\"wrapper-modal\">\n        <div className=\"modal\">\n          <span\n            onClick={() => setModalVisibility(false)}\n            className=\"modal-close\"\n          >\n            <CancelIcon />\n          </span>\n          <div className=\"modal__header\">\n            <img\n              className=\"modal__poster-img\"\n              src={`${poster_path}`}\n              alt={`${title}`}\n            />\n            <div className=\"modal__content\">\n              <p className=\"modal__details\">\n                <span className=\"modal__user-perc\">Genre: </span>{\" \"}\n                {genres.replaceAll(\"|\", \" | \")}\n              </p>\n              <h3 className=\"modal__title\">{title}</h3>\n              <p className=\"modal__overview\">\n                Vote Average: {rating_avg.toFixed(2)}\n              </p>\n              <p className=\"modal__overview\">Vote Count: {rating_count}</p>\n              <div className=\"modal__header\">\n                <button\n                  className=\"banner__button play\"\n                  onClick={() => {\n                    window.open(url);\n                  }}\n                >\n                  <PlayArrowIcon />\n                  Detail\n                </button>\n                <ReactStars\n                  count={5}\n                  onChange={onRating}\n                  size={24}\n                  color2={\"#ffd700\"}\n                />\n              </div>\n            </div>\n          </div>\n          <Row\n            title=\"You may also like...\"\n            id={movieId}\n            fetchUrl={`${baseUrl}/item-based/${movieId}`}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieModal;\n","import ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"../API/axios\";\nimport MovieModal from \"./MovieModal\";\nimport \"./Row.css\";\n\nconst Row = ({ title, fetchUrl, id, addRating }) => {\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\n  const [movies, setMovies] = useState([]);\n  const [modalVisibility, setModalVisibility] = useState(false);\n  const [movieSelected, setMovieSelection] = useState({});\n\n  //A snippet of code which runs based on a specific condition/variable\n  useEffect(() => {\n    console.log(id, fetchUrl);\n    //if [], run once when the row loads, and dont run again\n\n    async function fetchData() {\n      //Dont move until we get the API answer\n      const request = await axios.get(fetchUrl, {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n      });\n      setMovies(request.data.result);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n\n  const handleClick = (movie) => {\n    setModalVisibility(true);\n    setMovieSelection(movie);\n  };\n  return (\n    <section className=\"row\">\n      {/** TITLE */}\n      <h2>{title}</h2>\n      <div className=\"slider\">\n        <div className=\"slider__arrow-left\">\n          <span\n            className=\"arrow\"\n            onClick={() => {\n              document.getElementById(id).scrollLeft -= window.innerWidth - 80;\n            }}\n          >\n            <ArrowBackIosIcon />\n          </span>\n        </div>\n        <div id={id} className=\"row__posters\">\n          {/**SEVERAL ROW__POSTER */}\n          {movies.map((movie, idx) => (\n            <img\n              key={idx}\n              onClick={() => handleClick(movie)}\n              className={`row__poster row__posterLarge`}\n              src={`${base_url}${movie.poster_path}`}\n              loading=\"lazy\"\n              alt={movie.title}\n            />\n          ))}\n        </div>\n        <div className=\"slider__arrow-right\">\n          <span\n            className=\"arrow\"\n            onClick={() => {\n              document.getElementById(id).scrollLeft += window.innerWidth - 80;\n            }}\n          >\n            <ArrowForwardIosIcon />\n          </span>\n        </div>\n      </div>\n      {modalVisibility && (\n        <MovieModal\n          {...movieSelected}\n          setModalVisibility={setModalVisibility}\n          addRating={addRating}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default Row;\n","import React, { useEffect, useState } from \"react\";\nimport { baseUrl } from \"../API/constants\";\nimport requests from \"../API/requests\";\nimport \"./App.css\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\nimport Row from \"./Row\";\n\nconst App = () => {\n  const [personalizeUrl, setPersonalizeUrl] = useState(baseUrl + \"/all\");\n  const [myRating, setMyRating] = useState([]);\n\n  const addRating = (rating) => {\n    myRating.push(rating);\n    setMyRating(myRating);\n    const user_based_param = myRating.join(\"&params=\");\n    const url = `${baseUrl}/user-based/?params=${user_based_param}`;\n    setPersonalizeUrl(url);\n  };\n\n  useEffect(() => {\n    if (myRating.length > 0) {\n      const user_based_param = myRating.join(\"&params=\");\n      const url = `${baseUrl}/user-based/?params=${user_based_param}`;\n      setPersonalizeUrl(url);\n    }\n    console.log(personalizeUrl);\n  });\n\n  return (\n    <div className=\"app\">\n      {/**NAV */}\n      <Nav />\n      {/*BANNER*/}\n      <Banner />\n\n      <Row\n        title=\"Recommend For You\"\n        id=\"RF\"\n        fetchUrl={personalizeUrl}\n        addRating={addRating}\n        key={personalizeUrl}\n      />\n\n      <Row\n        title=\"DQ's Pick\"\n        id=\"DP\"\n        fetchUrl={requests.fetchDQsPick}\n        addRating={addRating}\n      />\n      <Row\n        title=\"Action Movies\"\n        id=\"AM\"\n        fetchUrl={requests.fetchActionMovies}\n        addRating={addRating}\n      />\n      <Row\n        title=\"Comedy Movies\"\n        id=\"CM\"\n        fetchUrl={requests.fetchComedyMovies}\n        addRating={addRating}\n      />\n      <Row\n        title=\"Horror Movies\"\n        id=\"HM\"\n        fetchUrl={requests.fetchHorrorMovies}\n        addRating={addRating}\n      />\n      <Row\n        title=\"Romance  Movies\"\n        id=\"RM\"\n        fetchUrl={requests.fetchRomanceMovies}\n        addRating={addRating}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}